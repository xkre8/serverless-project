name: Deploy Simple Serverless

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      run: npm install

    - name: Build Lambda function
      run: npm run build

    - name: Initialize Terraform
      working-directory: terraform
      run: terraform init

    - name: Validate Terraform
      working-directory: terraform
      run: terraform validate

    - name: Plan Terraform
      working-directory: terraform
      run: terraform plan

    - name: Apply Terraform
      working-directory: terraform
      run: terraform apply -auto-approve

    - name: Get API URL
      working-directory: terraform
      run: |
        API_URL=$(terraform output -raw api_url)
        echo "🚀 **Deployment Successful!**" >> $GITHUB_STEP_SUMMARY
        echo "**API URL:** $API_URL" >> $GITHUB_STEP_SUMMARY
        echo "**Test Command:** \`curl $API_URL\`" >> $GITHUB_STEP_SUMMARY
        echo ""
        echo "✅ Deployment completed!"
        echo "📍 API URL: $API_URL"
        echo "🧪 Test: curl $API_URL"

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Lambda function
      run: npm run build

    - name: Test build
      run: |
        if [ -f "dist/hello.zip" ]; then
          echo "✅ Build successful"
        else
          echo "❌ Build failed"
          exit 1
        fi
